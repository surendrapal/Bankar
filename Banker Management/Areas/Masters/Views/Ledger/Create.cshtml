@model BM.Models.Ledger

@{
    ViewBag.Title = "Create Ledger";
}

<h3>Create Ledger</h3>
<div class="row-fluid">
    @using (Html.BeginForm("Create", "Ledger", new { area = "Masters" }, FormMethod.Post, new { @class = "form-horizontal no-margin" }))
    {
        <div class="control-group">
            <div class="controls controls-row">
                @Html.ValidationSummary(true)
            </div>
        </div>
        <div class="row-fluid">
            <div class="control-group span6">
                @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Name, new { placeholder = "Ledger Name", @class = "span12" })
                </div>
            </div>
            <div class="control-group span6">
                @Html.LabelFor(model => model.GroupId, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.DropDownList("GroupId", null, "SELECT-ONE", new Dictionary<string, object> { { "class", "span12" }, { "data-val", "true" } })
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="control-group span6">
                @Html.LabelFor(model => model.MailingName, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.MailingName, new { placeholder = "Mailing Name", @class = "span12" })
                </div>
            </div>
            <div class="control-group span6">
                @Html.LabelFor(model => model.Address1, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Address1, new { placeholder = "Address line 1", @class = "span12" })
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="control-group span6">
                @Html.LabelFor(model => model.Address2, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Address2, new { placeholder = "Address line 2", @class = "span12" })
                </div>
            </div>
            <div class="control-group span6">
                @Html.LabelFor(model => model.Address3, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Address3, new { placeholder = "Address line 3", @class = "span12" })
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="control-group span6">
                @Html.LabelFor(C => C.CityId, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.City.Name, new { placeholder = "City", @class = "span12", style = "width:100%" })
                    @Html.HiddenFor(C => C.CityId)
                </div>
            </div>
            <div class="control-group span6">
                @Html.LabelFor(model => model.PinCode, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.PinCode, new { placeholder = "Pin Code", @class = "span12" })
                </div>
            </div>
        </div>
         <div class="row-fluid">
            <div class="control-group span6">
                @Html.LabelFor(C => C.Mobile, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Mobile, new { placeholder = "Mobile", @class = "span12"})
                </div>
            </div>
            <div class="control-group span6">
                @Html.LabelFor(model => model.Fax, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Fax, new { placeholder = "Fax", @class = "span12" })
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="control-group span6">
                @Html.LabelFor(C => C.Email, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.Email, new { placeholder = "Email", @class = "span12" })
                </div>
            </div>
            <div class="control-group span6">
                @Html.LabelFor(model => model.OpeningBalance, new { @class = "control-label" })
                <div class="controls controls-row">
                    @Html.TextBoxFor(C => C.OpeningBalance, new { placeholder = "Opening Balance", @class = "span12" })
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-actions no-margin">
            <button class="btn btn-info " type="submit">
                Save
            </button>

            <a class="btn btn-info" role="button" href="@Url.Action("Index", "Ledger")">
                Back
            </a>
            <div class="clearfix">
            </div>
        </div>
        @Html.AntiForgeryToken()
    }
</div>
@section Scripts{
    <script type="text/jscript">
        $(document).ready(function () {
            $('.form-horizontal').submit(function (e) { // <<< This selector needs to point to your form.
                var groupId = '#GroupId';
                if ($(groupId).val() == "") {
                    $(groupId).addClass("input-validation-error");
                    e.preventDefault();
                    return false;
                }
                else {
                    $(groupId).removeClass("input-validation-error");
                }
            });
        });

        function onSelected($e, datum) {
            $('#CityId').val(datum["Id"]);
        }
        $(document).ready(function () {
            var countries = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                limit: 10,
                remote: {

                    url: '/Settings/Location/LookupCity?id=%QUERY',
                    ajax: {
                        type: 'POST'
                    }
                }
            });
            countries.initialize();
            $('#City_Name').typeahead(null, {
                name: 'countries',
                displayKey: 'Name',
                source: countries.ttAdapter(),
                templates: {
                    empty: [
                    '<div class="empty-message">',
                    'unable to find any  qmatch the current query',
                    '</div>'
                    ].join('\n'),
                    //suggestion: Handlebars.compile('<p><strong>{{value}}</strong> – {{year}}</p>')
                }
            }).on('typeahead:selected', onSelected);
        });
    </script>
}